@BaseClass base(BaseEntityInputs, BaseEntityOutputs) = BaseEntityPoint
	[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	globalname(string) : "Global Entity Name" : : "Name by which this entity is linked to another entity in a different map. " +
		"When the player transitions to a new map, entities in the new map with globalnames matching entities in the previous map " +
		"will have the previous map's state copied over their state."

    angles(angle) : "Pitch Yaw Roll (X Y Z)" : "0 0 0" : "This entity's orientation in the world. " +
    	"Roll is the rotation around the X axis, " +
    	"pitch is rotation around the Y axis and " +
    	"yaw is the rotation around the Z axis."

	parentname[!srctools](target_destination) : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent. Set an attachment point via 'parentname,attachment'."
	parentname[srctools](target_destination) : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	parent_attachment_point[srctools](string) : "[HA] Attachment Point" : : "If set, attach to this attachment point on the parent during spawn."

	linedivider_vscript[+VSCRIPT, !engine](string) readonly : "-------------------------------------------------------------------------------------------------------" : ""

	vscripts[VSCRIPT](scriptlist) : "Entity Scripts" : : "Name(s) of script files that are executed after all entities have spawned."
	thinkfunction[VSCRIPT](string) : "Script think function" : : "Name of a function in this entity's script scope which will be called automatically."

	vscript_init_code[+VSCRIPT, +srctools](string) : "[HA] Init Code" : : "This code will be executed after the Entity Scripts option. Backtick ( ` ) characters will be converted to quotes in-game for strings."
	vscript_init_code2[+VSCRIPT, +srctools](string) : "[HA] Init Code 2" : : "This code will be the second line executed after the Entity Scripts option. Backtick ( ` ) characters will be converted to quotes in-game for strings. " +
		"Additional Init Code keyvalues can be added with SmartEdit off."
	// etc

	gmod_allowphysgun[GMod](boolean) : "Allow Physics Gun" : 1 : "If set, " +
		"players cannot use Physics Gun on this entity."
	gmod_allowtools[Gmod](string) : "Sandbox Tool Whitelist" : "" : "If set, " +
		"only given tools can be used on this entity.\n" +
		"You need to supply the tool class names, the names of the .lua files of those tools.\n" +
		"This also includes the context menu properties!"

	linedivider_base[!engine](string) readonly : "----------------------------------------------------------------------------------------------------------" : ""

	// Inputs
	input SetParent(target_destination) : "Changes the entity's parent in the movement hierarchy."
	input SetParentAttachment(string) : "Change this entity to attach to a specific attachment point on its parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment."
	input SetParentAttachmentMaintainOffset(string) : "Change this entity to attach to a specific attachment point on it's parent. Entities must be parented before being sent this input. The parameter passed in should be the name of the attachment. The entity will maintain it's position relative to the parent at the time it is attached."
	input ClearParent(void) : "Removes this entity from the the movement hierarchy, leaving it free to move independently."
	input SetLocalAngles[since_ASW, MBase, GMod](vector) : "Sets the rotation of the entity relative to the parent's rotation."
	input SetLocalOrigin[since_ASW, MBase, GMod](vector) : "Sets the position of the entity relative to its parent if one exists. Otherwise relative to the world."
	input SetAbsAngles[MBase](vector) : "Set this entity's angles, always relative to the world origin."

	// Mapbase BaseEntity changes:
	input FreeChildren[MBase](void) : "Unparents all direct children of this entity."
	input SetLocalVelocity[MBase](vector) : "Sets this entity's current velocity."
	input SetLocalAngularVelocity[MBase](vector) : "Sets this entity's current angular velocity."
	
	input SetHealth[MBase](integer) : "Sets this entity's health."
	input AddHealth[MBase](integer) : "Adds to this entity's health."
	input RemoveHealth[MBase](integer) : "Removes from this entity's health."
	
	input SetMaxHealth[MBase](integer) : "Sets this entity's max health."
	
	input SetEntityName[MBase](target_destination) : "Sets this entity's name that other entities should refer to it by."
	input SetTarget[MBase](target_destination) : "Sets this entity's target. This is specific to certain entities, particularly logic entities that involve a target."
	input SetOwnerEntity[MBase](target_destination) : "Sets this entity's owner entity. This has nothing to do with parenting and has more to do with collision and kill credits."
	input Touch[MBase](target_destination) : "Simulates this entity touching the specified entity."
	]
